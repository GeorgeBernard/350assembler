WAR: noop 					# War Game

addi $21 $0 5
addi $22 $0 13
shuffledeckB:
addi $27 $0 3992
nop
add $8 $27 $0
nop
nop
nop
addi $9 $0 51
addi $10 $0 0
addi $16 $0 1234
nop
nop
nop
lss $2 $16 0
nop
nop
nop
nop
lrs $2 $16 0
nop
nop
nop
nop
sll $2 $2 27
nop
nop
nop
srl $2 $2 27
nop
nop
add $2 $2 $27
nop
nop
nop
nop
addi $3 $27 1
addi $4 $27 52
addi $10 $0 1

WloopB:
lw $7 0($2)
lw $5 0($4)
nop
nop
nop
sw $7 0($4)
sw $5 0($2)
nop
nop
nop
sub $4 $4 $10
nop
nop
nop
nop
beq $4 $3 1
j WloopB

ShuffleDeckA:
addi $29 $0 4095
nop
nop
addi $29 $29 -52
nop
nop
nop
nop
add $8 $29 $0
nop
nop
nop
addi $9 $0 51
nop
addi $10 $0 0
nop
nop
lsr $2 $16 0
nop
nop
nop
sll $2 $2 27
nop
nop
nop 
nop
srl $2 $2 27
nop
nop
nop
nop
add $2 $2 $29
nop
nop
nop
addi $2 $29 3
addi $3 $29 1
addi $4 $29 52
addi $10 $0 1
addi $19 $0 3
nop
nop
loopWC:
lw $7 0($2)
lw $5 0($4)
nop
nop
nop
sw $7 0($4)
sw $5 0($2)
nop
nop
sub $4 $4 $10
nop
nop
nop
nop
beq $4 $3 1
j loopWC
nop
addi $28 $29 0

loadDmemWCB:
lw $17 0($27)
nop
nop
nop
lw $13 0($17)
lw $13 0($17)
nop
nop
nop
nop
lp $14 0($13)
lp $14 0($13)
addi $27 $27 1
nop
nop

loadDmemWCA:
lw $12 0($28)
nop
nop
nop
lw $9 0($12)
lw $9 0($12)
nop
nop
nop 
nop
WarButtonA:
wp $25
bne $25 $0 1
j WarButtonA
nop
nop
nop
addi $3 $0 41
addi $4 $0 61
addi $5 $0 100
addi $6 $0 49
nop
nop
nop
addi $22 $6 30
nop
nop
sw $12 1000($0)
nop
nop
nop
add $12 $9 0
nop
nop
nop
nop
jal DrawFunction
nop
nop
lw $12 1000($0)
nop
nop
WButtonB:
wp $25
beq $25 $0 1
j WButtonB

nop
nop
nop
nop
sw $12 1000($0)
nop
nop
nop
add $12 $13 0
nop
nop
nop
nop
addi $3 $0 41
addi $4 $0 61
addi $5 $0 500
addi $6 $0 49
nop
nop
nop
addi $23 $6 30
nop
nop
nop
jal DrawFunction
nop
addi $28 $28 1
nop
nop
nop
lw $12 1000($0)
nop
nop
wli 0
nop
nop
nop
nop
checkWar:
lw $3 52($12)
nop
nop
lw $4 52($17)
nop
nop
nop
nop
nop
sub $4 $4 $3
nop
nop
nop
nop
bne $4 $0 5
nop
wli T
wli I
wli E
j faceoff
nop
nop
nop
srl $4 $4 31
nop
nop
nop
nop
bne $4 $0 5
nop
wli P
wli 50
j clearScreenWar 
nop
nop
nop
wli P
wli 49
j clearScreenWar

endWar:
j loadDmemWCB

faceoff:
nop
wli 0
sw $10 1000($0)
sw $7 1001($0)
sw $8 1002($0)
sw $9 1003($0)
sw $2 1004($0)

addi $3 $0 41
addi $4 $0 61
addi $5 $0 100
addi $6 $0 129
nop
nop
nop
addi $22 $6 80
nop
nop
addi $10 $0 1

jal DrawTechnicolor

addi $3 $0 41
addi $4 $0 61
addi $5 $0 500
addi $6 $0 129
nop
nop
nop
nop
addi $10 $0 1

jal DrawTechnicolor


addi $3 $0 41
addi $4 $0 61
addi $5 $0 100
addi $6 $22 0
nop
nop
nop
nop
addi $10 $0 1

jal DrawTechnicolor

addi $3 $0 41
addi $4 $0 61
addi $5 $0 500
addi $6 $22 0
nop
nop
addi $22 $6 80
nop
nop
nop
addi $10 $0 1

jal DrawTechnicolor

addi $3 $0 41
addi $4 $0 61
addi $5 $0 100
addi $6 $22 0
nop
nop
nop
nop

lw $12 0($28)
nop
nop
nop
lw $9 0($12)
lw $9 0($12)
nop
nop
nop
nop
sw $12 1005($0)
nop
nop
nop
addi $12 $9 0
nop
nop
nop
addi $28 $28 1
nop
nop
nop

jal DrawFunction
nop
nop

addi $3 $0 41
addi $4 $0 61
addi $5 $0 500
addi $6 $22 0
addi $22 $6 80
nop
nop
lw $17 0($28)
nop
nop
nop
lw $9 0($17)
lw $9 0($17)
nop
nop
nop
nop
addi $12 $9 0
nop
nop
nop
addi $28 $28 1
nop
nop
nop

jal DrawFunction
nop
nop

nop
lw $10 1000($0)
lw $7 1001($0)
lw $8 1002($0)
lw $9 1003($0)
lw $2 1004($0)
lw $12 1005($0)
nop
nop
nop
nop
j doneWar

doneWar:
j checkWar

clearScreenWar:
nop
addi $11 $0 3
addi $3 $0 1
addi $4 $0 2
pollCWar:
wp $25
nop
nop
and $6 $25 $3
nop
nop
nop
nop
bne $3 $6 1 # aka up
j greenWar
j pollCWar

greenWar: 
wli 0
nop
addi $1 $0 2
addi $2 $0 0
addi $3 $0 38400
sll $3 $3 3
greenLoopWar:
sv $1 0($2)
addi $2 $2 1
beq $2 $3 1
j greenLoopWar
j nextWar

nextWar:
j endWar

DrawTechnicolor: noop			# args  $3 - w | $4 - h | $5 - x | $6 - y | $10 - color
								# uses  $1, $2, $7, $8, $9, $10

addi	$1,		$0, 	640 	# scr_w = 640
addi 	$2, 	$0, 	480 	# scr_h = 480

#--------- Calc start address ---------#

mult 	$7, 	$6, 	$1 		# start = (img_y * scr_w) + img_x
mult 	$7, 	$6, 	$1
mult 	$7, 	$6, 	$1
mult 	$7, 	$6, 	$1
add  	$7, 	$7, 	$5
add 	$11, 	$7, 	$0 		# address = start

#------------- Draw Image -------------#

addi 	$9, 	$0, 	0		# j = 0
drawTechnicolorLoopJ:

addi 	$8, 	$0, 	0		# i = 0
drawTechnicolorLoopI:
sv 		$10, 	0($11) 			# vmem(start) = 3
addi 	$11, 	$11, 	1 		# addr++
addi 	$10, 	$10, 	1 		# color++
addi 	$8, 	$8, 	1 		# i++

beq 	$8, 	$3, 	1 		# if i != img_w break
j drawTechnicolorLoopI 			# else continue loop

add 	$7, 	$7, 	$1 		# start += scr_w
add 	$11, 	$7, 	$0  	# addr = start
addi 	$9, 	$9, 	1 		# j++

beq 	$9, 	$4, 	1 		# if j != img_h break
j drawTechnicolorLoopJ 			# else continue loop

jr $31

DrawFunction: noop              # args  $3 - w | $4 - h | $5 - x | $6 - y | $12 - pmem_start
                                # uses  $1, $2, $7, $8, $9, $10, $11

addi    $1,     $0,     640     # scr_w = 640
addi    $2,     $0,     480     # scr_h = 480
addi    $10,    $0,     0       # color = 0;

#--------- Calc start address ---------#

mult    $7,     $6,     $1      # start = (img_y * scr_w) + img_x
mult    $7,     $6,     $1
mult    $7,     $6,     $1
mult    $7,     $6,     $1
add     $7,     $7,     $5
add     $11,    $7,     $0      # address = start

#------------- Draw Image -------------#

addi    $9,     $0,     0       # j = 0
drawLoopJ:

addi    $8,     $0,     0       # i = 0
drawLoopI:
lp      $10,    0($12)          # color = pmem(p_addr)
lp      $10,    0($12)          # color = pmem(p_addr)
addi    $12,    $12,    1       # p_addr ++
sv      $10,    0($11)          # vmem(start) = 3

addi    $11,    $11,    1       # addr++
addi    $10,    $10,    1       # color++
addi    $8,     $8,     1       # i++

beq     $8,     $3,     1       # if i != img_w break
j drawLoopI                     # else continue loop

add     $7,     $7,     $1      # start += scr_w
add     $11,    $7,     $0      # addr = start
addi    $9,     $9,     1       # j++

beq     $9,     $4,     1       # if j != img_h break
j drawLoopJ                     # else continue loop

jr $31




